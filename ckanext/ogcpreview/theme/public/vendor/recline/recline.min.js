/* Copyright (c) 2014, Siemens Coporate Technology and Arizona Geological Survey */
this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.Ckan=this.recline.Backend.Ckan||{};(function(e){e.__type__="ckan";var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.API_ENDPOINT="http://datahub.io/api";e.fetch=function(r){var i;if(r.endpoint)i=e.DataStore(r.endpoint);else{var s=e._parseCkanResourceUrl(r.url);r.id=s.resource_id;i=e.DataStore(s.endpoint)}var o=new t,u=i.search({resource_id:r.id,limit:0});u.done(function(e){var t=_.map(e.result.fields,function(e){e.type=e.type in n?n[e.type]:e.type;return e}),r={fields:t,useMemoryStore:!1};o.resolve(r)});return o.promise()};e._normalizeQuery=function(e,t){var n={resource_id:t.id,q:e.q,filters:{},limit:e.size||10,offset:e.from||0};if(e.sort&&e.sort.length>0){var r=_.map(e.sort,function(e){return e.field+" "+(e.order||"")});n.sort=r.join(",")}e.filters&&e.filters.length>0&&_.each(e.filters,function(e){e.type==="term"&&(n.filters[e.field]=e.term)});return n};e.query=function(n,r){var i;if(r.endpoint)i=e.DataStore(r.endpoint);else{var s=e._parseCkanResourceUrl(r.url);r.id=s.resource_id;i=e.DataStore(s.endpoint)}var o=e._normalizeQuery(n,r),u=new t,a=i.search(o);a.done(function(e){var t={total:e.result.total,hits:e.result.records};u.resolve(t)});return u.promise()};e.DataStore=function(t){var n={endpoint:t||e.API_ENDPOINT};n.search=function(e){var t=n.endpoint+"/3/action/datastore_search",r=jQuery.ajax({url:t,type:"POST",data:JSON.stringify(e)});return r};return n};e._parseCkanResourceUrl=function(e){parts=e.split("/");var t=parts.length;return{resource_id:parts[t-1],endpoint:parts.slice(0,[t-4]).join("/")+"/api"}};var n={int4:"integer",int8:"integer",float8:"float"}})(this.recline.Backend.Ckan);this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.CSV=this.recline.Backend.CSV||{};(function(e){function o(e){return e.charAt(e.length-1)!=="\n"?e:e.substring(0,e.length-1)}e.__type__="csv";var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.fetch=function(n){var r=new t;if(n.file){var i=new FileReader,s=n.encoding||"UTF-8";i.onload=function(t){var i=e.parseCSV(t.target.result,n);r.resolve({records:i,metadata:{filename:n.file.name},useMemoryStore:!0})};i.onerror=function(e){alert("Failed to load file. Code: "+e.target.error.code)};i.readAsText(n.file,s)}else if(n.data){var o=e.parseCSV(n.data,n);r.resolve({records:o,useMemoryStore:!0})}else n.url&&jQuery.get(n.url).done(function(t){var i=e.parseCSV(t,n);r.resolve({records:i,useMemoryStore:!0})});return r.promise()};e.parseCSV=function(e,t){e=o(e);var t=t||{},i=t.trim===!1?!1:!0,u=t.delimiter||",",a=t.quotechar||'"',f="",l=!1,c=!1,h="",p=[],d=[],v,m;m=function(e){if(c!==!0){e===""?e=null:i===!0&&(e=s(e));n.test(e)?e=parseInt(e,10):r.test(e)&&(e=parseFloat(e,10))}return e};for(v=0;v<e.length;v+=1){f=e.charAt(v);if(l!==!1||f!==u&&f!=="\n")if(f!==a)h+=f;else if(!l){l=!0;c=!0}else if(e.charAt(v+1)===a){h+=a;v+=1}else l=!1;else{h=m(h);p.push(h);if(f==="\n"){d.push(p);p=[]}h="";c=!1}}h=m(h);p.push(h);d.push(p);return d};e.serializeCSV=function(e,t){var n=null;if(e instanceof Array)n=e;else{n=[];var r=_.pluck(e.fields,"id");n.push(r);_.each(e.records,function(e,t){var i=_.map(r,function(t){return e[t]});n.push(i)})}var t=t||{},s=t.delimiter||",",o=t.quotechar||'"',u="",a="",f="",l="",c,h,p;p=function(e){e===null?e="":typeof e=="string"&&i.test(e)?e=o+e+o:typeof e=="number"&&(e=e.toString(10));return e};for(c=0;c<n.length;c+=1){u=n[c];for(h=0;h<u.length;h+=1){a=p(u[h]);if(h===u.length-1){f+=a;l+=f+"\n";f=""}else f+=a+s;a=""}}return l};var n=/^\d+$/,r=/^\d*\.\d+$|^\d+\.\d*$/,i=/^\s|\s$|,|"|\n/,s=function(){return String.prototype.trim?function(e){return e.trim()}:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}()})(this.recline.Backend.CSV);this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.DataProxy=this.recline.Backend.DataProxy||{};(function(e){e.__type__="dataproxy";e.dataproxy_url="http://jsonpdataproxy.appspot.com";e.timeout=5e3;var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.fetch=function(r){var i={url:r.url,"max-results":r.size||r.rows||1e3,type:r.format||""},s=jQuery.ajax({url:e.dataproxy_url,data:i,dataType:"jsonp"}),o=new t;n(s).done(function(e){e.error&&o.reject(e.error);o.resolve({records:e.data,fields:e.fields,useMemoryStore:!0})}).fail(function(e){o.reject(e)});return o.promise()};var n=function(n){var r=new t,i=setTimeout(function(){r.reject({message:"Request Error: Backend did not respond after "+e.timeout/1e3+" seconds"})},e.timeout);n.done(function(e){clearTimeout(i);r.resolve(e)}).fail(function(e){clearTimeout(i);r.reject(e)});return r.promise()}})(this.recline.Backend.DataProxy);this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.ElasticSearch=this.recline.Backend.ElasticSearch||{};(function(e,t){t.__type__="elasticsearch";var n=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;t.Wrapper=function(e,t){var n=this;this.endpoint=e;this.options=_.extend({dataType:"json"},t);this.mapping=function(){var e=n.endpoint+"/_mapping",t=r({url:e,dataType:this.options.dataType});return t};this.get=function(e){var t=this.endpoint+"/"+e;return r({url:t,dataType:"json"})};this.upsert=function(e){var t=JSON.stringify(e);url=this.endpoint;e.id&&(url+="/"+e.id);return r({url:url,type:"POST",data:t,dataType:"json"})};this.remove=function(e){url=this.endpoint;url+="/"+e;return r({url:url,type:"DELETE",dataType:"json"})};this._normalizeQuery=function(e){var t=this,n=e&&e.toJSON?e.toJSON():_.extend({},e),r={constant_score:{query:{}}};n.q?r.constant_score.query={query_string:{query:n.q}}:r.constant_score.query={match_all:{}};if(n.filters&&n.filters.length){r.constant_score.filter={and:[]};_.each(n.filters,function(e){r.constant_score.filter.and.push(t._convertFilter(e))})}return r},this._normalizeSort=function(e){var t=_.map(e,function(e){var t={},n=_.clone(e);delete n.field;t[e.field]=n;return t});return t},this._convertFilter=function(e){var t={};t[e.type]={};if(e.type==="term")t.term[e.field]=e.term.toLowerCase();else if(e.type==="geo_distance"){t.geo_distance[e.field]=e.point;t.geo_distance.distance=e.distance;t.geo_distance.unit=e.unit}return t},this.query=function(e){var t=e&&e.toJSON?e.toJSON():_.extend({},e);t.query=this._normalizeQuery(e);delete t.q;delete t.filters;t.sort&&t.sort.length>0&&(t.sort=this._normalizeSort(t.sort));var n={source:JSON.stringify(t)},i=this.endpoint+"/_search",s=r({url:i,data:n,dataType:this.options.dataType});return s}};t.esOptions={};t.fetch=function(e){var r=new t.Wrapper(e.url,t.esOptions),i=new n;r.mapping().done(function(e){if(!e){i.reject({message:"Elastic Search did not return a mapping"});return}var t=_.keys(e)[0],n=_.map(e[t].properties,function(e,t){e.id=t;return e});i.resolve({fields:n})}).fail(function(e){i.reject(e)});return i.promise()};t.save=function(e,r){var i=new t.Wrapper(r.url,t.esOptions);if(e.creates.length+e.updates.length+e.deletes.length>1){var s=new n;msg="Saving more than one item at a time not yet supported";alert(msg);s.reject(msg);return s.promise()}if(e.creates.length>0)return i.upsert(e.creates[0]);if(e.updates.length>0)return i.upsert(e.updates[0]);if(e.deletes.length>0)return i.remove(e.deletes[0].id)};t.query=function(e,r){var i=new n,s=new t.Wrapper(r.url,t.esOptions),o=s.query(e);o.done(function(e){var t={total:e.hits.total};t.hits=_.map(e.hits.hits,function(e){!("id"in e._source)&&e._id&&(e._source.id=e._id);return e._source});e.facets&&(t.facets=e.facets);i.resolve(t)}).fail(function(e){var t={title:"Failed: "+e.status+" code",message:e.responseText};i.reject(t)});return i.promise()};var r=function(t,n){var r={};n&&(r={beforeSend:function(e){_.each(n,function(t,n){e.setRequestHeader(n,t)})}});var t=_.extend(r,t);return e.ajax(t)}})(jQuery,this.recline.Backend.ElasticSearch);this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.GDocs=this.recline.Backend.GDocs||{};(function(e){e.__type__="gdocs";var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.fetch=function(n){var r=new t,i=e.getGDocsAPIUrls(n.url);(function(){var e=new t;jQuery.getJSON(i.spreadsheet,function(t){e.resolve({spreadsheetTitle:t.feed.title.$t})});return e.promise()})().then(function(t){jQuery.getJSON(i.worksheet,function(n){var i=e.parseData(n),s=_.map(i.fields,function(e){return{id:e}});r.resolve({metadata:{title:t.spreadsheetTitle+" :: "+i.worksheetTitle,spreadsheetTitle:t.spreadsheetTitle,worksheetTitle:i.worksheetTitle},records:i.records,fields:s,useMemoryStore:!0})})});return r.promise()};e.parseData=function(e,t){var t=t||{},n=t.colTypes||{},r={fields:[],records:[]},i=e.feed.entry||[],s,o,u=/^([\d\.\-]+)\%$/;for(s in i[0])if(/^gsx/.test(s)){o=s.substr(4);r.fields.push(o)}r.records=_.map(i,function(e){var t={};_.each(r.fields,function(r){var i="gsx$"+r,s=e[i].$t,o;if(n[r]==="percent"&&u.test(s)){o=u.exec(s)[1];s=parseFloat(o)/100}t[r]=s});return t});r.worksheetTitle=e.feed.title.$t;return r};e.getGDocsAPIUrls=function(e){var t=/.*spreadsheet\/ccc?.*key=([^#?&+]+)[^#]*(#gid=([\d]+).*)?/,n=e.match(t),r,i,s;if(!n){r=e.split("/")[5];i=1;s={worksheet:"https://spreadsheets.google.com/feeds/list/"+r+"/"+i+"/public/values?alt=json",spreadsheet:"https://spreadsheets.google.com/feeds/worksheets/"+r+"/public/basic?alt=json"}}else{r=n[1];i=parseInt(n[3])+1;isNaN(i)&&(i=1);s={worksheet:"https://spreadsheets.google.com/feeds/list/"+r+"/"+i+"/public/values?alt=json",spreadsheet:"https://spreadsheets.google.com/feeds/worksheets/"+r+"/public/basic?alt=json"}}return s}})(this.recline.Backend.GDocs);this.recline=this.recline||{};this.recline.Backend=this.recline.Backend||{};this.recline.Backend.Memory=this.recline.Backend.Memory||{};(function(e){e.__type__="memory";var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.Store=function(e,n){var r=this;this.records=e;this.data=this.records;n?this.fields=n:e&&(this.fields=_.map(e[0],function(e,t){return{id:t,type:"string"}}));this.update=function(e){_.each(r.records,function(t,n){e.id===t.id&&(r.records[n]=e)})};this.remove=function(e){var t=_.reject(r.records,function(t){return e.id===t.id});this.records=t};this.save=function(e,n){var r=this,i=new t;_.each(e.updates,function(e){r.update(e)});_.each(e.deletes,function(e){r.remove(e)});i.resolve();return i.promise()},this.query=function(e){var n=new t,r=e.size||this.records.length,i=e.from||0,s=this.records;s=this._applyFilters(s,e);s=this._applyFreeTextQuery(s,e);_.each(e.sort,function(e){var t=e.field;s=_.sortBy(s,function(e){var n=e[t];return n});e.order=="desc"&&s.reverse()});var o=this.computeFacets(s,e),u={total:s.length,hits:s.slice(i,i+r),facets:o};n.resolve(u);return n.promise()};this._applyFilters=function(e,t){function u(e){var t=o[e.field].type||"string";return s[t]}function a(e,t){var n=u(t),r=n(e[t.field]),i=n(t.term);return r===i}function f(e,t){var n=t.start==null||t.start==="",r=t.stop==null||t.stop==="",i=u(t),s=i(e[t.field]),o=i(t.start),a=i(t.stop);return(!n||!r)&&s===""?!1:(n||s>=o)&&(r||s<=a)}function l(){}var n=t.filters,i={term:a,range:f,geo_distance:l},s={integer:function(e){return parseFloat(e,10)},"float":function(e){return parseFloat(e,10)},number:function(e){return parseFloat(e,10)},string:function(e){return e.toString()},date:function(e){return(new Date(e)).valueOf()},datetime:function(e){return(new Date(e)).valueOf()}},o={};_.each(r.fields,function(e){o[e.id]=e});return _.filter(e,function(e){var t=_.map(n,function(t){return i[t.type](e,t)});return _.all(t,_.identity)})};this._applyFreeTextQuery=function(e,t){if(t.q){var n=t.q.split(" "),i=_.map(n,function(e){return new RegExp(e.toLowerCase())});e=_.filter(e,function(e){var t=!0;_.each(i,function(n){var i=!1;_.each(r.fields,function(t){var r=e[t.id];r!==null&&r!==undefined?r=r.toString():r="";i=i||n.test(r.toLowerCase())});t=t&&i});return t})}return e};this.computeFacets=function(e,t){var n={};if(!t.facets)return n;_.each(t.facets,function(e,t){n[t]=(new recline.Model.Facet({id:t})).toJSON();n[t].termsall={}});_.each(e,function(e){_.each(t.facets,function(t,r){var i=t.terms.field,s=e[i],o=n[r];s?o.termsall[s]=o.termsall[s]?o.termsall[s]+1:1:o.missing=o.missing+1})});_.each(t.facets,function(e,t){var r=n[t],i=_.map(r.termsall,function(e,t){return{term:t,count:e}});r.terms=_.sortBy(i,function(e){return-e.count});r.terms=r.terms.slice(0,10)});return n};this.transform=function(e){var n=new t;r.records=_.map(r.records,e);r.records=_.filter(r.records,function(e){return e!=null});n.resolve();return n.promise()}}})(this.recline.Backend.Memory);this.recline=this.recline||{};this.recline.Data=this.recline.Data||{};(function(my){my.Transform={};my.Transform.evalFunction=function(funcString){try{eval("var editFunc = "+funcString)}catch(e){return{errorMessage:e+""}}return editFunc};my.Transform.previewTransform=function(e,t,n){var r=[],i=my.Transform.mapDocs($.extend(!0,{},e),t);for(var s=0;s<i.docs.length;s++){var o=e[s],u=i.docs[s];u||(u={});n?r.push({before:o[n],after:u[n]}):r.push({before:o,after:u})}return r};my.Transform.mapDocs=function(e,t){var n=[],r=[],i=[],s=_.map(e,function(e){try{var s=t(_.clone(e))}catch(o){i.push(e);return}if(s===null){s={_deleted:!0};n.push(s);r.push(e)}else s&&!_.isEqual(s,e)&&n.push(s);return s});return{updates:n,docs:s,deletes:r,failed:i}}})(this.recline.Data);"indexOf"in Array.prototype||(Array.prototype.indexOf=function(e,t){t===undefined&&(t=0);t<0&&(t+=this.length);t<0&&(t=0);for(var n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1});"lastIndexOf"in Array.prototype||(Array.prototype.lastIndexOf=function(e,t){t===undefined&&(t=this.length-1);t<0&&(t+=this.length);t>this.length-1&&(t=this.length-1);for(t++;t-->0;)if(t in this&&this[t]===e)return t;return-1});"forEach"in Array.prototype||(Array.prototype.forEach=function(e,t){for(var n=0,r=this.length;n<r;n++)n in this&&e.call(t,this[n],n,this)});"map"in Array.prototype||(Array.prototype.map=function(e,t){var n=new Array(this.length);for(var r=0,i=this.length;r<i;r++)r in this&&(n[r]=e.call(t,this[r],r,this));return n});"filter"in Array.prototype||(Array.prototype.filter=function(e,t){var n=[],r;for(var i=0,s=this.length;i<s;i++)i in this&&e.call(t,r=this[i],i,this)&&n.push(r);return n});"every"in Array.prototype||(Array.prototype.every=function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&!e.call(t,this[n],n,this))return!1;return!0});"some"in Array.prototype||(Array.prototype.some=function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&e.call(t,this[n],n,this))return!0;return!1});this.recline=this.recline||{};this.recline.Model=this.recline.Model||{};(function(e){var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.Dataset=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"query");this.backend=null;this.get("backend")?this.backend=this._backendFromString(this.get("backend")):this.get("records")&&(this.backend=recline.Backend.Memory);this.fields=new e.FieldList;this.records=new e.RecordList;this._changes={deletes:[],updates:[],creates:[]};this.facets=new e.FacetList;this.recordCount=null;this.queryState=new e.Query;this.queryState.bind("change",this.query);this.queryState.bind("facet:add",this.query);this._store=this.backend;this.backend==recline.Backend.Memory&&this.fetch()},fetch:function(){function r(t){var r=e._normalizeRecordsAndFields(t.records,t.fields);t.useMemoryStore&&(e._store=new recline.Backend.Memory.Store(r.records,r.fields));e.set(t.metadata);e.fields.reset(r.fields);e.query().done(function(){n.resolve(e)}).fail(function(e){n.reject(e)})}var e=this,n=new t;this.backend!==recline.Backend.Memory?this.backend.fetch(this.toJSON()).done(r).fail(function(e){n.reject(e)}):r({records:this.get("records"),fields:this.get("fields"),useMemoryStore:!0});return n.promise()},_normalizeRecordsAndFields:function(e,t){if(!t&&e&&e.length>0)if(e[0]instanceof Array){t=e[0];e=e.slice(1)}else t=_.map(_.keys(e[0]),function(e){return{id:e}});if(t&&t.length>0&&(t[0]===null||typeof t[0]!="object")){var n={};t=_.map(t,function(e,t){e===null?e="":e=e.toString();var r=e.replace(/^\s+|\s+$/g,"");if(r===""){r="_noname_";e=r}while(r in n){n[e]+=1;r=e+n[e]}e in n||(n[e]=0);return{id:r}})}e&&e.length>0&&e[0]instanceof Array&&(e=_.map(e,function(e){var n={};_.each(t,function(t,r){n[t.id]=e[r]});return n}));return{fields:t,records:e}},save:function(){var e=this;return this._store.save(this._changes,this.toJSON())},transform:function(e){var t=this;if(!this._store.transform){alert("Transform is not supported with this backend: "+this.get("backend"));return}this.trigger("recline:flash",{message:"Updating all visible docs. This could take a while...",persist:!0,loader:!0});this._store.transform(e).done(function(){t.query();t.trigger("recline:flash",{message:"Records updated successfully"})})},query:function(e){var n=this,r=new t;this.trigger("query:start");e&&this.queryState.set(e,{silent:!0});var i=this.queryState.toJSON();this._store.query(i,this.toJSON()).done(function(e){n._handleQueryResult(e);n.trigger("query:done");r.resolve(n.records)}).fail(function(e){n.trigger("query:fail",e);r.reject(e)});return r.promise()},_handleQueryResult:function(t){var n=this;n.recordCount=t.total;var r=_.map(t.hits,function(t){var r=new e.Record(t);r.fields=n.fields;r.bind("change",function(e){n._changes.updates.push(e.toJSON())});r.bind("destroy",function(e){n._changes.deletes.push(e.toJSON())});return r});n.records.reset(r);if(t.facets){var i=_.map(t.facets,function(t,n){t.id=n;return new e.Facet(t)});n.facets.reset(i)}},toTemplateJSON:function(){var e=this.toJSON();e.recordCount=this.recordCount;e.fields=this.fields.toJSON();return e},getFieldsSummary:function(){var n=this,r=new e.Query;r.set({size:0});this.fields.each(function(e){r.addFacet(e.id)});var i=new t;this._store.query(r.toJSON(),this.toJSON()).done(function(t){t.facets&&_.each(t.facets,function(t,r){t.id=r;var i=new e.Facet(t);n.fields.get(r).facets.reset(i)});i.resolve(t)});return i.promise()},recordSummary:function(e){return e.summary()},_backendFromString:function(e){var t=null;recline&&recline.Backend&&_.each(_.keys(recline.Backend),function(n){n.toLowerCase()===e.toLowerCase()&&(t=recline.Backend[n])});return t}});e.Record=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue")},getFieldValue:function(e){val=this.getFieldValueUnrendered(e);e&&!_.isUndefined(e.renderer)&&(val=e.renderer(val,e,this.toJSON()));return val},getFieldValueUnrendered:function(e){if(!e)return"";var t=this.get(e.id);e.deriver&&(t=e.deriver(t,e,this));return t},summary:function(e){var t=this,n='<div class="recline-record-summary">';this.fields.each(function(e){e.id!="id"&&(n+='<div class="'+e.id+'"><strong>'+e.get("label")+"</strong>: "+t.getFieldValue(e)+"</div>")});n+="</div>";return n},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}});e.RecordList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Record});e.Field=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:!1},initialize:function(t,n){if("0"in t)throw new Error("Looks like you did not pass a proper hash with id to Field constructor");this.attributes.label===null&&this.set({label:this.id});this.attributes.type.toLowerCase()in this._typeMap&&(this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]);if(n){this.renderer=n.renderer;this.deriver=n.deriver}this.renderer||(this.renderer=this.defaultRenderers[this.get("type")]);this.facets=new e.FacetList},_typeMap:{text:"string","double":"number","float":"number",numeric:"number","int":"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(e,t,n){return JSON.stringify(e)},geo_point:function(e,t,n){return JSON.stringify(e)},number:function(e,t,n){var r=t.get("format");return r==="percentage"?e+"%":e},string:function(e,t,n){var r=t.get("format");if(r==="markdown"){if(typeof Showdown!="undefined"){var i=new Showdown.converter;out=i.makeHtml(e);return out}return e}if(r=="plain")return e;e&&typeof e=="string"&&(e=e.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>'));return e}}});e.FieldList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Field});e.Query=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{size:100,from:0,q:"",facets:{},filters:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",start:"",stop:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},addFilter:function(e){var t=JSON.parse(JSON.stringify(e));_.keys(e).length<=3&&(t=_.defaults(t,this._filterTemplates[e.type]));var n=this.get("filters");n.push(t);this.trigger("change:filters:new-blank")},updateFilter:function(e,t){},removeFilter:function(e){var t=this.get("filters");t.splice(e,1);this.set({filters:t});this.trigger("change")},addFacet:function(e){var t=this.get("facets");if(_.contains(_.keys(t),e))return;t[e]={terms:{field:e}};this.set({facets:t},{silent:!0});this.trigger("facet:add",this)},addHistogramFacet:function(e){var t=this.get("facets");t[e]={date_histogram:{field:e,interval:"day"}};this.set({facets:t},{silent:!0});this.trigger("facet:add",this)}});e.Facet=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}});e.FacetList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Facet});e.ObjectState=Backbone.Model.extend({});Backbone.sync=function(e,t,n){return t.backend.sync(e,t,n)}})(this.recline.Model);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.Flot=Backbone.View.extend({template:'     <div class="recline-flot">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">           <h3 class="alert-heading">Hey there!</h3>           <p>There\'s no graph here yet because we don\'t know what fields you\'d like to see plotted.</p>           <p>Please tell us by <strong>using the menu on the right</strong> and a graph will automatically appear.</p>         </div>       </div>     </div> ',initialize:function(n){var r=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"];this.el=e(this.el);_.bindAll(this,"render","redraw","_toolTip","_xaxisLabel");this.needToRedraw=!1;this.model.bind("change",this.render);this.model.fields.bind("reset",this.render);this.model.fields.bind("add",this.render);this.model.records.bind("add",this.redraw);this.model.records.bind("reset",this.redraw);var i=_.extend({group:null,series:[],graphType:"lines-and-points"},n.state);this.state=new recline.Model.ObjectState(i);this.previousTooltipPoint={x:null,y:null};this.editor=new t.FlotControls({model:this.model,state:this.state.toJSON()});this.editor.state.bind("change",function(){r.state.set(r.editor.state.toJSON());r.redraw()});this.elSidebar=this.editor.el},render:function(){var t=this,n=this.model.toTemplateJSON(),r=Mustache.render(this.template,n);e(this.el).html(r);this.$graph=this.el.find(".panel.graph");this.$graph.on("plothover",this._toolTip);return this},redraw:function(){var t=!jQuery.expr.filters.hidden(this.el[0]);if(!t||this.model.records.length===0){this.needToRedraw=!0;return}if(this.state.get("group")&&this.state.get("series")){var n=this.createSeries(),r=this.getGraphOptions(this.state.attributes.graphType,n[0].data.length);this.plot=e.plot(this.$graph,n,r)}},show:function(){this.needToRedraw&&this.redraw()},_toolTip:function(t,n,r){if(r){if(this.previousTooltipPoint.x!==r.dataIndex||this.previousTooltipPoint.y!==r.seriesIndex){this.previousTooltipPoint.x=r.dataIndex;this.previousTooltipPoint.y=r.seriesIndex;e("#recline-flot-tooltip").remove();var i=r.datapoint[0].toFixed(2),s=r.datapoint[1].toFixed(2);this.state.attributes.graphType==="bars"&&(i=r.datapoint[1].toFixed(2),s=r.datapoint[0].toFixed(2));var o=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:this.state.attributes.group,x:this._xaxisLabel(i),series:r.series.label,y:s}),u,a;if(this.state.attributes.graphType==="bars"){u=r.pageX+15;a=r.pageY-10}else if(this.state.attributes.graphType==="columns"){u=r.pageX+15;a=r.pageY}else{u=r.pageX+10;a=r.pageY-20}e('<div id="recline-flot-tooltip">'+o+"</div>").css({top:a,left:u}).appendTo("body").fadeIn(200)}}else{e("#recline-flot-tooltip").remove();this.previousTooltipPoint.x=null;this.previousTooltipPoint.y=null}},_xaxisLabel:function(e){var t=this.model.fields.get(this.state.attributes.group),n=t.get("type"),r=n==="date"||n==="date-time"||n==="time";if(this.xvaluesAreIndex){e=parseInt(e,10);e=this.model.records.models[e].get(this.state.attributes.group)}r&&(e=(new Date(e)).toLocaleDateString());return e},getGraphOptions:function(e,t){var n=this,r=function(e){var t=n._xaxisLabel(e)||"";typeof t!="string"&&(t=t.toString());n.state.attributes.graphType!=="bars"&&t.length>10&&(t=t.slice(0,10)+"...");return t},s={};s.tickFormatter=r;if(this.xvaluesAreIndex){var o=Math.min(this.model.records.length,15),u=this.model.records.length/o,a=[];for(i=0;i<o;i++)a.push(parseInt(i*u,10));s.ticks=a}var f={};f.autoscale=!0;f.autoscaleMargin=.02;var l={};l.position="ne";var c={};c.hoverable=!0;c.clickable=!0;c.borderColor="#aaaaaa";c.borderWidth=1;var h={lines:{legend:l,colors:this.graphColors,lines:{show:!0},xaxis:s,yaxis:f,grid:c},points:{legend:l,colors:this.graphColors,points:{show:!0,hitRadius:5},xaxis:s,yaxis:f,grid:c},"lines-and-points":{legend:l,colors:this.graphColors,points:{show:!0,hitRadius:5},lines:{show:!0},xaxis:s,yaxis:f,grid:c},bars:{legend:l,colors:this.graphColors,lines:{show:!1},xaxis:f,yaxis:s,grid:c,bars:{show:!0,horizontal:!0,shadowSize:0,align:"center",barWidth:.8}},columns:{legend:l,colors:this.graphColors,lines:{show:!1},xaxis:s,yaxis:f,grid:c,bars:{show:!0,horizontal:!1,shadowSize:0,align:"center",barWidth:.8}}};return n.state.get("graphOptions")?_.extend(h[e],n.state.get("graphOptions")):h[e]},createSeries:function(){var e=this;e.xvaluesAreIndex=!1;var t=[];_.each(this.state.attributes.series,function(n){var r=[],i=e.model.fields.get(n).get("label");_.each(e.model.records.models,function(t,i){var s=e.model.fields.get(e.state.attributes.group),o=t.getFieldValue(s),u=s.get("type"),a=u==="date"||u==="date-time"||u==="time";if(a){e.xvaluesAreIndex=!0;o=i}else if(typeof o=="string"){o=parseFloat(o);if(isNaN(o)){o=i;e.xvaluesAreIndex=!0}}var f=e.model.fields.get(n),l=t.getFieldValue(f);e.state.attributes.graphType=="bars"?r.push([l,o]):r.push([o,l])});t.push({data:r,label:i,hoverable:!0})});return t}});t.FlotControls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Graph Type</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Lines and Points</option>           <option value="lines">Lines</option>           <option value="points">Points</option>           <option value="bars">Bars</option>           <option value="columns">Columns</option>           </select>         </div>         <label>Group Column (Axis 1)</label>         <div class="input editor-group">           <select>           <option value="">Please choose ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Add Series</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Save</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Series <span>{{seriesName}} (Axis 2)</span>         [<a href="#remove" class="action-remove-series">Remove</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(t){var n=this;this.el=e(this.el);_.bindAll(this,"render");this.model.fields.bind("reset",this.render);this.model.fields.bind("add",this.render);this.state=new recline.Model.ObjectState(t.state);this.render()},render:function(){var e=this,t=this.model.toTemplateJSON(),n=Mustache.render(this.template,t);this.el.html(n);this.state.get("graphType")&&this._selectOption(".editor-type",this.state.get("graphType"));this.state.get("group")&&this._selectOption(".editor-group",this.state.get("group"));var r=[""];this.state.get("series").length>0&&(r=this.state.get("series"));_.each(r,function(t,n){e.addSeries(n);e._selectOption(".editor-series.js-series-"+n,t)});return this},_selectOption:function(t,n){var r=this.el.find(t+" select > option");r&&r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return!1}})},onEditorSubmit:function(t){var n=this.el.find(".editor-group select"),r=this,i=this.el.find(".editor-series select"),s=i.map(function(){return e(this).val()}),o={series:e.makeArray(s),group:this.el.find(".editor-group select").val(),graphType:this.el.find(".editor-type select").val()};this.state.set(o)},addSeries:function(e){var t=_.extend({seriesIndex:e,seriesName:String.fromCharCode(e+64+1)},this.model.toTemplateJSON()),n=Mustache.render(this.templateSeriesEditor,t);this.el.find(".editor-series-group").append(n);return this},_onAddSeries:function(e){e.preventDefault();this.addSeries(this.state.get("series").length)},removeSeries:function(t){t.preventDefault();var n=e(t.target);n.parent().parent().remove();this.onEditorSubmit()}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.Flotr2=Backbone.View.extend({template:'     <div class="recline-graph">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">           <h3 class="alert-heading">Hey there!</h3>           <p>There\'s no graph here yet because we don\'t know what fields you\'d like to see plotted.</p>           <p>Please tell us by <strong>using the menu on the right</strong> and a graph will automatically appear.</p>         </div>       </div>     </div> ',initialize:function(n){var r=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"];this.el=e(this.el);_.bindAll(this,"render","redraw");this.needToRedraw=!1;this.model.bind("change",this.render);this.model.fields.bind("reset",this.render);this.model.fields.bind("add",this.render);this.model.records.bind("add",this.redraw);this.model.records.bind("reset",this.redraw);var i=_.extend({group:null,series:[],graphType:"lines-and-points"},n.state);this.state=new recline.Model.ObjectState(i);this.editor=new t.Flotr2Controls({model:this.model,state:this.state.toJSON()});this.editor.state.bind("change",function(){r.state.set(r.editor.state.toJSON());r.redraw()});this.elSidebar=this.editor.el},render:function(){var t=this,n=this.model.toTemplateJSON(),r=Mustache.render(this.template,n);e(this.el).html(r);this.$graph=this.el.find(".panel.graph");return this},redraw:function(){var e=!jQuery.expr.filters.hidden(this.el[0]);if(!e||this.model.records.length===0){this.needToRedraw=!0;return}if(this.state.get("group")&&this.state.get("series")){this.$graph.width(this.el.width()-20);var t=this.createSeries(),n=this.getGraphOptions(this.state.attributes.graphType);this.plot=Flotr.draw(this.$graph.get(0),t,n)}},show:function(){this.needToRedraw&&this.redraw()},getGraphOptions:function(e){var t=this,n=function(e){return i(e)},r=function(e){var n=e.x,r=e.y;if(t.state.attributes.graphType==="bars"){var s=n;n=r;r=s}n=i(n);var o=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:t.state.attributes.group,x:n,series:e.series.label,y:r});
return o},i=function(e){var n=t.model.fields.get(t.state.attributes.group),r=n.get("type"),i=r==="date"||r==="date-time"||r==="time";if(t.model.records.models[parseInt(e)]){e=t.model.records.models[parseInt(e)].get(t.state.attributes.group);i&&(e=(new Date(e)).toLocaleDateString())}else i&&(e=(new Date(parseInt(e))).toLocaleDateString());return e},s={};s.tickFormatter=n;var o={};o.autoscale=!0;o.autoscaleMargin=.02;var u={};u.track=!0;u.relative=!0;u.trackFormatter=r;var a={};a.position="ne";var f={lines:{legend:a,colors:this.graphColors,lines:{show:!0},xaxis:s,yaxis:o,mouse:u},points:{legend:a,colors:this.graphColors,points:{show:!0,hitRadius:5},xaxis:s,yaxis:o,mouse:u,grid:{hoverable:!0,clickable:!0}},"lines-and-points":{legend:a,colors:this.graphColors,points:{show:!0,hitRadius:5},lines:{show:!0},xaxis:s,yaxis:o,mouse:u,grid:{hoverable:!0,clickable:!0}},bars:{legend:a,colors:this.graphColors,lines:{show:!1},xaxis:o,yaxis:s,mouse:{track:!0,relative:!0,trackFormatter:r,fillColor:"#FFFFFF",fillOpacity:.3,position:"e"},bars:{show:!0,horizontal:!0,shadowSize:0,barWidth:.8}},columns:{legend:a,colors:this.graphColors,lines:{show:!1},xaxis:s,yaxis:o,mouse:{track:!0,relative:!0,trackFormatter:r,fillColor:"#FFFFFF",fillOpacity:.3,position:"n"},bars:{show:!0,horizontal:!1,shadowSize:0,barWidth:.8}},grid:{hoverable:!0,clickable:!0}};return t.state.get("graphOptions")?_.extend(f[e],t.state.get("graphOptions")):f[e]},createSeries:function(){var e=this,t=[];_.each(this.state.attributes.series,function(n){var r=[];_.each(e.model.records.models,function(t,i){var s=e.model.fields.get(e.state.attributes.group),o=t.getFieldValue(s),u=s.get("type"),a=u==="date"||u==="date-time"||u==="time";if(a)e.state.attributes.graphType!="bars"&&e.state.attributes.graphType!="columns"?o=(new Date(o)).getTime():o=i;else if(typeof o=="string"){o=parseFloat(o);isNaN(o)&&(o=i)}var f=e.model.fields.get(n),l=t.getFieldValue(f);e.state.attributes.graphType=="bars"?r.push([l,o]):r.push([o,l])});t.push({data:r,label:n,mouse:{lineColor:e.graphColors[t.length]}})});return t}});t.Flotr2Controls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Graph Type</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Lines and Points</option>           <option value="lines">Lines</option>           <option value="points">Points</option>           <option value="bars">Bars</option>           <option value="columns">Columns</option>           </select>         </div>         <label>Group Column (Axis 1)</label>         <div class="input editor-group">           <select>           <option value="">Please choose ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Add Series</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Save</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Series <span>{{seriesName}} (Axis 2)</span>         [<a href="#remove" class="action-remove-series">Remove</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(t){var n=this;this.el=e(this.el);_.bindAll(this,"render");this.model.fields.bind("reset",this.render);this.model.fields.bind("add",this.render);this.state=new recline.Model.ObjectState(t.state);this.render()},render:function(){var e=this,t=this.model.toTemplateJSON(),n=Mustache.render(this.template,t);this.el.html(n);this.state.get("graphType")&&this._selectOption(".editor-type",this.state.get("graphType"));this.state.get("group")&&this._selectOption(".editor-group",this.state.get("group"));var r=[""];this.state.get("series").length>0&&(r=this.state.get("series"));_.each(r,function(t,n){e.addSeries(n);e._selectOption(".editor-series.js-series-"+n,t)});return this},_selectOption:function(t,n){var r=this.el.find(t+" select > option");r&&r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return!1}})},onEditorSubmit:function(t){var n=this.el.find(".editor-group select"),r=this,i=this.el.find(".editor-series select"),s=i.map(function(){return e(this).val()}),o={series:e.makeArray(s),group:this.el.find(".editor-group select").val(),graphType:this.el.find(".editor-type select").val()};this.state.set(o)},addSeries:function(e){var t=_.extend({seriesIndex:e,seriesName:String.fromCharCode(e+64+1)},this.model.toTemplateJSON()),n=Mustache.render(this.templateSeriesEditor,t);this.el.find(".editor-series-group").append(n);return this},_onAddSeries:function(e){e.preventDefault();this.addSeries(this.state.get("series").length)},removeSeries:function(t){t.preventDefault();var n=e(t.target);n.parent().parent().remove();this.onEditorSubmit()}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};this.recline.View.Graph=this.recline.View.Flot;this.recline.View.GraphControls=this.recline.View.FlotControls;this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.Grid=Backbone.View.extend({tagName:"div",className:"recline-grid-container",initialize:function(t){var n=this;this.el=e(this.el);_.bindAll(this,"render","onHorizontalScroll");this.model.records.bind("add",this.render);this.model.records.bind("reset",this.render);this.model.records.bind("remove",this.render);this.tempState={};var r=_.extend({hiddenFields:[]},t.state);this.state=new recline.Model.ObjectState(r)},events:{},setColumnSort:function(e){var t=[{}];t[0][this.tempState.currentColumn]={order:e};this.model.query({sort:t})},hideColumn:function(){var e=this.state.get("hiddenFields");e.push(this.tempState.currentColumn);this.state.set({hiddenFields:e});this.state.trigger("change");this.render()},showColumn:function(t){var n=_.without(this.state.get("hiddenFields"),e(t.target).data("column"));this.state.set({hiddenFields:n});this.render()},onHorizontalScroll:function(t){var n=e(t.target).scrollLeft();this.el.find(".recline-grid thead tr").scrollLeft(n)},template:'     <div class="table-container">     <table class="recline-grid table-striped table-condensed" cellspacing="0">       <thead class="fixed-header">         <tr>           {{#fields}}             <th class="column-header {{#hidden}}hidden{{/hidden}}" data-field="{{id}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;" title="{{label}}">               <span class="column-header-name">{{label}}</span>             </th>           {{/fields}}           <th class="last-header" style="width: {{lastHeaderWidth}}px; max-width: {{lastHeaderWidth}}px; min-width: {{lastHeaderWidth}}px; padding: 0; margin: 0;"></th>         </tr>       </thead>       <tbody class="scroll-content"></tbody>     </table>     </div>   ',toTemplateJSON:function(){var e=this,t=this.model.toJSON();t.notEmpty=this.fields.length>0;t.fields=_.map(this.fields,function(e){return e.toJSON()});t.lastHeaderWidth=this.scrollbarDimensions.width-2;return t},render:function(){var n=this;this.fields=this.model.fields.filter(function(e){return _.indexOf(n.state.get("hiddenFields"),e.id)==-1});this.scrollbarDimensions=this.scrollbarDimensions||this._scrollbarSize();var r=this.fields.length,i=n.el.width()-20-10*r-this.scrollbarDimensions.width,s=parseInt(Math.max(50,i/r),10),o=Math.max(i-r*s,0);_.each(this.fields,function(e,t){t===0?e.set({width:s+o}):e.set({width:s})});var u=Mustache.render(this.template,this.toTemplateJSON());this.el.html(u);this.model.records.forEach(function(r){var i=e("<tr />");n.el.find("tbody").append(i);var s=new t.GridRow({model:r,el:i,fields:n.fields});s.render()});var a=this.el.find("tbody")[0];a.scrollHeight<=a.offsetHeight&&this.el.find("th.last-header").hide();this.el.find(".recline-grid").toggleClass("no-hidden",n.state.get("hiddenFields").length===0);this.el.find(".recline-grid tbody").scroll(this.onHorizontalScroll);return this},_scrollbarSize:function(){var t=e("<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>").appendTo("body"),n={width:t.width()-t[0].clientWidth+1,height:t.height()-t[0].clientHeight};t.remove();return n}});t.GridRow=Backbone.View.extend({initialize:function(t){_.bindAll(this,"render");this._fields=t.fields;this.el=e(this.el);this.model.bind("change",this.render)},template:'       {{#cells}}       <td data-field="{{field}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;">         <div class="data-table-cell-content">           <a href="javascript:{}" class="data-table-cell-edit" title="Edit this cell">&nbsp;</a>           <div class="data-table-cell-value">{{{value}}}</div>         </div>       </td>       {{/cells}}     ',events:{"click .data-table-cell-edit":"onEditClick","click .data-table-cell-editor .okButton":"onEditorOK","click .data-table-cell-editor .cancelButton":"onEditorCancel"},toTemplateJSON:function(){var e=this,t=this.model,n=this._fields.map(function(e){return{field:e.id,width:e.get("width"),value:t.getFieldValue(e)}});return{id:this.id,cells:n}},render:function(){this.el.attr("data-id",this.model.id);var t=Mustache.render(this.template,this.toTemplateJSON());e(this.el).html(t);return this},cellEditorTemplate:'     <div class="menu-container data-table-cell-editor">       <textarea class="data-table-cell-editor-editor" bind="textarea">{{value}}</textarea>       <div id="data-table-cell-editor-actions">         <div class="data-table-cell-editor-action">           <button class="okButton btn primary">Update</button>           <button class="cancelButton btn danger">Cancel</button>         </div>       </div>     </div>   ',onEditClick:function(t){var n=this.el.find(".data-table-cell-editor-editor");n.length>0&&n.parents(".data-table-cell-value").html(n.text()).siblings(".data-table-cell-edit").removeClass("hidden");e(t.target).addClass("hidden");var r=e(t.target).siblings(".data-table-cell-value");r.data("previousContents",r.text());var i=Mustache.render(this.cellEditorTemplate,{value:r.text()});r.html(i)},onEditorOK:function(t){var n=this,r=e(t.target),i=r.parents("tr").attr("data-id"),s=r.parents("td").attr("data-field"),o=r.parents(".data-table-cell-editor").find(".data-table-cell-editor-editor").val(),u={};u[s]=o;this.model.set(u);this.trigger("recline:flash",{message:"Updating row...",loader:!0});this.model.save().then(function(e){this.trigger("recline:flash",{message:"Row updated successfully",category:"success"})}).fail(function(){this.trigger("recline:flash",{message:"Error saving row",category:"error",persist:!0})})},onEditorCancel:function(t){var n=e(t.target).parents(".data-table-cell-value");n.html(n.data("previousContents")).siblings(".data-table-cell-edit").removeClass("hidden")}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.Map=Backbone.View.extend({template:'     <div class="recline-map">       <div class="panel map"></div>     </div> ',latitudeFieldNames:["lat","latitude"],longitudeFieldNames:["lon","longitude"],geometryFieldNames:["geojson","geom","the_geom","geometry","spatial","location","geo","lonlat"],initialize:function(n){var r=this;this.el=e(this.el);this.visible=!0;this.mapReady=!1;this.map=null;var i=_.extend({geomField:null,lonField:null,latField:null,autoZoom:!0,cluster:!1},n.state);this.state=new recline.Model.ObjectState(i);this._clusterOptions={zoomToBoundsOnClick:!0,maxClusterRadius:80,singleMarkerMode:!1,skipDuplicateAddTesting:!0,animateAddingMarkers:!1};this.model.fields.bind("change",function(){r._setupGeometryField();r.render()});this.model.records.bind("add",function(e){r.redraw("add",e)});this.model.records.bind("change",function(e){r.redraw("remove",e);r.redraw("add",e)});this.model.records.bind("remove",function(e){r.redraw("remove",e)});this.model.records.bind("reset",function(){r.redraw("reset")});this.menu=new t.MapMenu({model:this.model,state:this.state.toJSON()});this.menu.state.bind("change",function(){r.state.set(r.menu.state.toJSON());r.redraw()});this.state.bind("change",function(){r.redraw()});this.elSidebar=this.menu.el},infobox:function(e){var t="";for(key in e.attributes)if(!this.state.get("geomField")||key!=this.state.get("geomField"))t+="<div><strong>"+key+"</strong>: "+e.attributes[key]+"</div>";return t},geoJsonLayerOptions:{pointToLayer:function(e,t){var n=new L.Marker(t);n.bindPopup(e.properties.popupContent);this.markers.addLayer(n);return n},onEachFeature:function(e,t){e.properties&&e.properties.popupContent&&t.bindPopup(e.properties.popupContent)}},render:function(){var t=this;htmls=Mustache.render(this.template,this.model.toTemplateJSON());e(this.el).html(htmls);this.$map=this.el.find(".panel.map");this.redraw();return this},redraw:function(e,t){var n=this;e=e||"refresh";n._geomReady()||n._setupGeometryField();n.mapReady||n._setupMap();if(this._geomReady()&&this.mapReady){this.map.removeLayer(this.features);this.map.removeLayer(this.markers);var r=0;this.features.eachLayer(function(){r++});if(e=="refresh"||e=="reset"){this.features.clearLayers();this.map.removeLayer(this.markers);this.markers=new L.MarkerClusterGroup(this._clusterOptions);this._add(this.model.records.models)}else e=="add"&&t?this._add(t):e=="remove"&&t&&this._remove(t);var i=0;this.features.eachLayer(function(){i++});var s=i-r>0;if(!this.state.get("cluster")&&i>64&&s){this.state.set({cluster:!0});return}this.state.get("cluster")?this.map.addLayer(this.markers):this.map.addLayer(this.features);this.state.get("autoZoom")&&(this.visible?this._zoomToFeatures():this._zoomPending=!0)}},show:function(){if(this.map){this.map.invalidateSize();if(this._zoomPending&&this.state.get("autoZoom")){this._zoomToFeatures();this._zoomPending=!1}}this.visible=!0},hide:function(){this.visible=!1},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},_add:function(e){var t=this;e instanceof Array||(e=[e]);var n=0,r=0;_.every(e,function(e){n+=1;var i=t._getGeometryFromRecord(e);if(typeof i=="undefined"||i===null)return!0;if(i instanceof Object){i.properties={popupContent:t.infobox(e),cid:e.cid};try{t.features.addData(i)}catch(s){r+=1;var o="Wrong geometry value";s.message&&(o+=" ("+s.message+")");r<=10&&t.trigger("recline:flash",{message:o,category:"error"})}}else{r+=1;r<=10&&t.trigger("recline:flash",{message:"Wrong geometry value",category:"error"})}return!0})},_remove:function(e){var t=this;e instanceof Array||(e=[e]);_.each(e,function(e){for(key in t.features._layers)t.features._layers[key].feature.properties.cid==e.cid&&t.features.removeLayer(t.features._layers[key])})},_getGeometryFromRecord:function(t){if(this.state.get("geomField")){var n=t.get(this.state.get("geomField"));if(typeof n=="string")try{n=e.parseJSON(n)}catch(r){}if(typeof n=="string"){n=n.replace("(","").replace(")","");var i=n.split(","),s=parseFloat(i[0]),o=parseFloat(i[1]);return!isNaN(o)&&!isNaN(parseFloat(s))?{type:"Point",coordinates:[o,s]}:null}return n&&_.isArray(n)?{type:"Point",coordinates:[n[0],n[1]]}:n&&n.lat?{type:"Point",coordinates:[n.lon||n.lng,n.lat]}:n}if(this.state.get("lonField")&&this.state.get("latField")){var o=t.get(this.state.get("lonField")),s=t.get(this.state.get("latField"));if(!isNaN(parseFloat(o))&&!isNaN(parseFloat(s)))return{type:"Point",coordinates:[o,s]}}return null},_setupGeometryField:function(){if(!this._geomReady()){this.state.set({geomField:this._checkField(this.geometryFieldNames),latField:this._checkField(this.latitudeFieldNames),lonField:this._checkField(this.longitudeFieldNames)});this.menu.state.set(this.state.toJSON())}},_checkField:function(e){var t,n=this.model.fields.pluck("id");for(var r=0;r<e.length;r++)for(var i=0;i<n.length;i++)if(n[i].toLowerCase()==e[r].toLowerCase())return n[i];return null},_zoomToFeatures:function(){var e=this.features.getBounds();e&&e.getNorthEast()&&e.getSouthWest()?this.map.fitBounds(e):this.map.setView([0,0],2)},_setupMap:function(){var e=this;this.map=new L.Map(this.$map.get(0));var t="http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png",n='Map data &copy; 2011 OpenStreetMap contributors, Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png">',r=new L.TileLayer(t,{maxZoom:18,attribution:n,subdomains:"1234"});this.map.addLayer(r);this.markers=new L.MarkerClusterGroup(this._clusterOptions);this.geoJsonLayerOptions.pointToLayer=_.bind(this.geoJsonLayerOptions.pointToLayer,this);this.features=new L.GeoJSON(null,this.geoJsonLayerOptions);this.map.setView([0,0],2);this.mapReady=!0},_selectOption:function(t,n){var r=e("."+t+" > select > option");r&&r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return!1}})}});t.MapMenu=Backbone.View.extend({className:"editor",template:'     <form class="form-stacked">       <div class="clearfix">         <div class="editor-field-type">             <label class="radio">               <input type="radio" id="editor-field-type-latlon" name="editor-field-type" value="latlon" checked="checked"/>               Latitude / Longitude fields</label>             <label class="radio">               <input type="radio" id="editor-field-type-geom" name="editor-field-type" value="geom" />               GeoJSON field</label>         </div>         <div class="editor-field-type-latlon">           <label>Latitude field</label>           <div class="input editor-lat-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>           <label>Longitude field</label>           <div class="input editor-lon-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>         <div class="editor-field-type-geom" style="display:none">           <label>Geometry field (GeoJSON)</label>           <div class="input editor-geom-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-update-map">Update</button>       </div>       <div class="editor-options" >         <label class="checkbox">           <input type="checkbox" id="editor-auto-zoom" value="autozoom" checked="checked" />           Auto zoom to features</label>         <label class="checkbox">           <input type="checkbox" id="editor-cluster" value="cluster"/>           Cluster markers</label>       </div>       <input type="hidden" class="editor-id" value="map-1" />       </div>     </form>   ',events:{"click .editor-update-map":"onEditorSubmit","change .editor-field-type":"onFieldTypeChange","click #editor-auto-zoom":"onAutoZoomChange","click #editor-cluster":"onClusteringChange"},initialize:function(t){var n=this;this.el=e(this.el);_.bindAll(this,"render");this.model.fields.bind("change",this.render);this.state=new recline.Model.ObjectState(t.state);this.state.bind("change",this.render);this.render()},render:function(){var t=this;htmls=Mustache.render(this.template,this.model.toTemplateJSON());e(this.el).html(htmls);if(this._geomReady()&&this.model.fields.length)if(this.state.get("geomField")){this._selectOption("editor-geom-field",this.state.get("geomField"));this.el.find("#editor-field-type-geom").attr("checked","checked").change()}else{this._selectOption("editor-lon-field",this.state.get("lonField"));this._selectOption("editor-lat-field",this.state.get("latField"));this.el.find("#editor-field-type-latlon").attr("checked","checked").change()}this.state.get("autoZoom")?this.el.find("#editor-auto-zoom").attr("checked","checked"):this.el.find("#editor-auto-zoom").removeAttr("checked");this.state.get("cluster")?this.el.find("#editor-cluster").attr("checked","checked"):this.el.find("#editor-cluster").removeAttr("checked");return this},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},onEditorSubmit:function(e){e.preventDefault();this.el.find("#editor-field-type-geom").attr("checked")?this.state.set({geomField:this.el.find(".editor-geom-field > select > option:selected").val(),lonField:null,latField:null}):this.state.set({geomField:null,lonField:this.el.find(".editor-lon-field > select > option:selected").val(),latField:this.el.find(".editor-lat-field > select > option:selected").val()});return!1},onFieldTypeChange:function(e){if(e.target.value=="geom"){this.el.find(".editor-field-type-geom").show();this.el.find(".editor-field-type-latlon").hide()}else{this.el.find(".editor-field-type-geom").hide();this.el.find(".editor-field-type-latlon").show()}},onAutoZoomChange:function(e){this.state.set({autoZoom:!this.state.get("autoZoom")})},onClusteringChange:function(e){this.state.set({cluster:!this.state.get("cluster")})},_selectOption:function(t,n){var r=this.el.find("."+t+" > select > option");r&&r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return!1}})}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.MultiView=Backbone.View.extend({template:'   <div class="recline-data-explorer">     <div class="alert-messages"></div>         <div class="header clearfix">       <div class="navigation">         <div class="btn-group" data-toggle="buttons-radio">         {{#views}}         <a href="#{{id}}" data-view="{{id}}" class="btn">{{label}}</a>         {{/views}}         </div>       </div>       <div class="recline-results-info">         <span class="doc-count">{{recordCount}}</span> records      </div>       <div class="menu-right">         <div class="btn-group" data-toggle="buttons-checkbox">           {{#sidebarViews}}           <a href="#" data-action="{{id}}" class="btn">{{label}}</a>           {{/sidebarViews}}         </div>       </div>       <div class="query-editor-here" style="display:inline;"></div>     </div>     <div class="data-view-sidebar"></div>     <div class="data-view-container"></div>   </div>   ',events:{"click .menu-right a":"_onMenuClick","click .navigation a":"_onSwitchView"},initialize:function(n){var r=this;this.el=e(this.el);this._setupState(n.state);n.views?this.pageViews=n.views:this.pageViews=[{id:"grid",label:"Grid",view:new t.SlickGrid({model:this.model,state:this.state.get("view-grid")})},{id:"graph",label:"Graph",view:new t.Graph({model:this.model,state:this.state.get("view-graph")})},{id:"map",label:"Map",view:new t.Map({model:this.model,state:this.state.get("view-map")})},{id:"timeline",label:"Timeline",view:new t.Timeline({model:this.model,state:this.state.get("view-timeline")})},{id:"transform",label:"Transform",view:new t.Transform({model:this.model})}];n.sidebarViews?this.sidebarViews=n.sidebarViews:this.sidebarViews=[{id:"filterEditor",label:"Filters",view:new t.FilterEditor({model:this.model})},{id:"fieldsView",label:"Fields",view:new t.Fields({model:this.model})}];this.render();this._bindStateChanges();this._bindFlashNotifications();this.state.get("readOnly")&&this.setReadOnly();this.state.get("currentView")?this.updateNav(this.state.get("currentView")):this.updateNav(this.pageViews[0].id);this._showHideSidebar();this.model.bind("query:start",function(){r.notify({loader:!0,persist:!0})});this.model.bind("query:done",function(){r.clearNotifications();r.el.find(".doc-count").text(r.model.recordCount||"Unknown")});this.model.bind("query:fail",function(e){r.clearNotifications();var t="";if(typeof e=="string")t=e;else if(typeof e=="object"){e.title&&(t=e.title+": ");e.message&&(t+=e.message)}else t="There was an error querying the backend";r.notify({message:t,category:"error",persist:!0})});this.model.queryState.set(r.state.get("query"),{silent:!0});this.model.fetch().fail(function(e){r.notify({message:e.message,category:"error",persist:!0})})},setReadOnly:function(){this.el.addClass("recline-read-only")},render:function(){var t=this.model.toTemplateJSON();t.views=this.pageViews;t.sidebarViews=this.sidebarViews;var n=Mustache.render(this.template,t);e(this.el).html(n);var r=this.el.find(".data-view-container"),i=this.el.find(".data-view-sidebar");_.each(this.pageViews,function(e,t){e.view.render();r.append(e.view.el);e.view.elSidebar&&i.append(e.view.elSidebar)});_.each(this.sidebarViews,function(e){this["$"+e.id]=e.view.el;i.append(e.view.el)},this);var s=new recline.View.Pager({model:this.model.queryState});this.el.find(".recline-results-info").after(s.el);var o=new recline.View.QueryEditor({model:this.model.queryState});this.el.find(".query-editor-here").append(o.el)},_showHideSidebar:function(){var t=this.el.find(".data-view-sidebar"),n=t.children().filter(function(){return e(this).css("display")!="none"}).length;n>0?t.show():t.hide()},updateNav:function(e){this.el.find(".navigation a").removeClass("active");var t=this.el.find('.navigation a[data-view="'+e+'"]');t.addClass("active");_.each(this.pageViews,function(t,n){if(t.id===e){t.view.el.show();t.view.elSidebar&&t.view.elSidebar.show()}else{t.view.el.hide();t.view.elSidebar&&t.view.elSidebar.hide();t.view.hide&&t.view.hide()}});this._showHideSidebar();_.each(this.pageViews,function(t,n){t.id===e&&t.view.show&&t.view.show()})},_onMenuClick:function(t){t.preventDefault();var n=e(t.target).attr("data-action");this["$"+n].toggle();this._showHideSidebar()},_onSwitchView:function(t){t.preventDefault();var n=e(t.target).attr("data-view");this.updateNav(n);this.state.set({currentView:n})},_setupState:function(e){var n=this,r=t.parseHashQueryString(),i=r.reclineQuery;i=i?JSON.parse(i):n.model.queryState.toJSON();var s=r["view-graph"]||r.graph;s=s?JSON.parse(s):{};var o=_.extend({query:i,"view-graph":s,backend:this.model.backend.__type__,url:this.model.get("url"),dataset:this.model.toJSON(),currentView:null,readOnly:!1},e);this.state=new recline.Model.ObjectState(o)},_bindStateChanges:function(){var e=this;this.model.queryState.bind("change",function(){e.state.set({query:e.model.queryState.toJSON()})});_.each(this.pageViews,function(t){if(t.view.state&&t.view.state.bind){var n={};n["view-"+t.id]=t.view.state.toJSON();e.state.set(n);t.view.state.bind("change",function(){var n={};n["view-"+t.id]=t.view.state.toJSON();e.state.set(n,{silent:!0});e.state.trigger("change")})}})},_bindFlashNotifications:function(){var e=this;_.each(this.pageViews,function(t){t.view.bind("recline:flash",function(t){e.notify(t)})})},notify:function(t){var n=_.extend({message:"Loading",category:"warning",loader:!1},t),r;n.loader?r='         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>':r='         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>';var i=e(Mustache.render(r,n));i=e(i).appendTo(e(".recline-data-explorer .alert-messages"));t.persist||setTimeout(function(){e(i).fadeOut(1e3,function(){e(this).remove()})},1e3)},clearNotifications:function(){var t=e(".recline-data-explorer .alert-messages .alert");t.fadeOut(1500,function(){e(this).remove()})}});t.MultiView.restore=function(e){var n;e.backend==="memory"?n={backend:"memory",records:[{stub:"this is a stub dataset because we do not restore memory datasets"}]}:n=_.extend({url:e.url,backend:e.backend},e.dataset);var r=new recline.Model.Dataset(n),i=new t.MultiView({model:r,state:e});return i};var n=/^([^?]+)(\?.*)?/;t.parseHashUrl=function(e){var t=n.exec(e);return t===null?{}:{path:t[1],query:t[2]||""}};t.parseQueryString=function(e){if(!e)return{};var t={},n,r=function(e){return unescape(e.replace(/\+/g," "))},i=/([^&=]+)=?([^&]*)/g;e&&e.length&&e[0]==="?"&&(e=e.slice(1));while(n=i.exec(e))t[r(n[1])]=r(n[2]);return t};t.parseHashQueryString=function(){q=t.parseHashUrl(window.location.hash).query;return t.parseQueryString(q)};t.composeQueryString=function(t){var n="?",r=[];e.each(t,function(e,t){typeof t=="object"&&(t=JSON.stringify(t));r.push(e+"="+encodeURIComponent(t))});n+=r.join("&");return n};t.getNewHashForQueryString=function(e){var n=t.composeQueryString(e);return window.location.hash?window.location.hash.split("?")[0].slice(1)+n:n};t.setHashQueryString=function(e){window.location.hash=t.getNewHashForQueryString(e)}})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.SlickGrid=Backbone.View.extend({initialize:function(t){var n=this;this.el=e(this.el);this.el.addClass("recline-slickgrid");_.bindAll(this,"render");this.model.records.bind("add",this.render);this.model.records.bind("reset",this.render);this.model.records.bind("remove",this.render);this.model.records.bind("change",this.onRecordChanged,this);var r=_.extend({hiddenColumns:[],columnsOrder:[],columnsSort:{},columnsWidth:[],columnsEditor:[],options:{},fitColumns:!1},t.state);this.state=new recline.Model.ObjectState(r)},events:{},onRecordChanged:function(e){if(!this.grid)return;var t=this.grid.getData().getModelRow(e);this.grid.invalidateRow(t);this.grid.getData().updateItem(e,t);this.grid.render()},render:function(){function u(t){var n={};e.model.fields.each(function(e){n[e.id]=t.getFieldValueUnrendered(e)});return n}function a(){var e=[],t=[];this.push=function(n,r){e.push(n);t.push(r)};this.getLength=function(){return t.length};this.getItem=function(e){return t[e]};this.getItemMetadata=function(e){return{}};this.getModel=function(t){return e[t]};this.getModelRow=function(t){return e.indexOf(t)};this.updateItem=function(n,r){t[r]=u(n);e[r]=n}}var e=this,t=_.extend({enableCellNavigation:!0,enableColumnReorder:!0,explicitInitialization:!0,syncColumnCellResize:!0,forceFitColumns:this.state.get("fitColumns")},e.state.get("gridOptions")),n=[],r=function(t,n,r,i,s){var o=e.model.fields.get(i.id);return o.renderer?o.renderer(r,o,s):r};_.each(this.model.fields.toJSON(),function(t){var i={id:t.id,name:t.label,field:t.id,sortable:!0,minWidth:80,formatter:r},s=_.find(e.state.get("columnsWidth"),function(e){return e.column===t.id});s&&(i.width=s.width);var o=_.find(e.state.get("columnsEditor"),function(e){return e.column===t.id});o&&(i.editor=o.editor);n.push(i)});var i=n.filter(function(t){return _.indexOf(e.state.get("hiddenColumns"),t.id)===-1});if(this.state.get("columnsOrder")&&this.state.get("columnsOrder").length>0){i=i.sort(function(t,n){return _.indexOf(e.state.get("columnsOrder"),t.id)>_.indexOf(e.state.get("columnsOrder"),n.id)?1:-1});n=n.sort(function(t,n){return _.indexOf(e.state.get("columnsOrder"),t.id)>_.indexOf(e.state.get("columnsOrder"),n.id)?1:-1})}var s=[];for(var o=n.length-1;o>=0;o--)_.indexOf(_.pluck(i,"id"),n[o].id)===-1&&s.push(n.splice(o,1)[0]);n=n.concat(s);var f=new a;this.model.records.each(function(e){f.push(e,u(e))});this.grid=new Slick.Grid(this.el,f,i,t);var l=this.model.queryState.get("sort");if(l){var c=l[0].field,h=l[0].order!=="desc";this.grid.setSortColumn(c,h)}this.grid.onSort.subscribe(function(t,n){var r=n.sortAsc?"asc":"desc",i=[{field:n.sortCol.field,order:r}];e.model.query({sort:i})});this.grid.onColumnsReordered.subscribe(function(t,n){e.state.set({columnsOrder:_.pluck(e.grid.getColumns(),"id")})});this.grid.onColumnsResized.subscribe(function(t,n){var r=n.grid.getColumns(),i=n.grid.getOptions().defaultColumnWidth,s=[];_.each(r,function(e){e.width!=i&&s.push({column:e.id,width:e.width})});e.state.set({columnsWidth:s})});this.grid.onCellChange.subscribe(function(e,t){var n=t.grid,r=f.getModel(t.row),i=n.getColumns()[t.cell].id,s={};s[i]=t.item[i];r.set(s)});var p=new Slick.Controls.ColumnPicker(n,this.grid,_.extend(t,{state:this.state}));if(e.visible){e.grid.init();e.rendered=!0}else e.rendered=!1;return this},show:function(){if(!this.rendered){this.grid||this.render();this.grid
.init();this.rendered=!0}this.visible=!0},hide:function(){this.visible=!1}})})(jQuery,recline.View);(function(e){function t(t,n,r){function u(){n.onHeaderContextMenu.subscribe(a);r=e.extend({},o,r);i=e('<ul class="dropdown-menu slick-contextmenu" style="display:none;position:absolute;z-index:20;" />').appendTo(document.body);i.bind("mouseleave",function(t){e(this).fadeOut(r.fadeSpeed)});i.bind("click",f)}function a(o,u){o.preventDefault();i.empty();s=[];var a,f;for(var l=0;l<t.length;l++){a=e("<li />").appendTo(i);f=e('<input type="checkbox" />').data("column-id",t[l].id).attr("id","slick-column-vis-"+t[l].id);s.push(f);n.getColumnIndex(t[l].id)!==null&&f.attr("checked","checked");f.appendTo(a);e("<label />").text(t[l].name).attr("for","slick-column-vis-"+t[l].id).appendTo(a)}e("<li/>").addClass("divider").appendTo(i);a=e("<li />").data("option","autoresize").appendTo(i);f=e('<input type="checkbox" />').data("option","autoresize").attr("id","slick-option-autoresize");f.appendTo(a);e("<label />").text("Force fit columns").attr("for","slick-option-autoresize").appendTo(a);n.getOptions().forceFitColumns&&f.attr("checked","checked");i.css("top",o.pageY-10).css("left",o.pageX-10).fadeIn(r.fadeSpeed)}function f(i){var o;if(e(i.target).data("option")==="autoresize"){var u;if(e(i.target).is("li")){o=e(i.target).find("input").first();u=!o.is(":checked");o.attr("checked",u)}else u=i.target.checked;if(u){n.setOptions({forceFitColumns:!0});n.autosizeColumns()}else n.setOptions({forceFitColumns:!1});r.state.set({fitColumns:u});return}if(e(i.target).is("li")&&!e(i.target).hasClass("divider")||e(i.target).is("input")){if(e(i.target).is("li")){o=e(i.target).find("input").first();o.attr("checked",!o.is(":checked"))}var a=[],f=[];e.each(s,function(n,r){e(this).is(":checked")?a.push(t[n]):f.push(t[n].id)});if(!a.length){e(i.target).attr("checked","checked");return}n.setColumns(a);r.state.set({hiddenColumns:f})}}var i,s,o={fadeSpeed:250};u()}e.extend(!0,window,{Slick:{Controls:{ColumnPicker:t}}})})(jQuery);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){typeof VMM!="undefined"&&(VMM.debug=!1);t.Timeline=Backbone.View.extend({template:'     <div class="recline-timeline">       <div id="vmm-timeline-id"></div>     </div>   ',startFieldNames:["date","startdate","start","start-date"],endFieldNames:["end","endDate"],elementId:"#vmm-timeline-id",initialize:function(t){var n=this;this.el=e(this.el);this.timeline=new VMM.Timeline;this._timelineIsInitialized=!1;this.model.fields.bind("reset",function(){n._setupTemporalField()});this.model.records.bind("all",function(){n.reloadData()});var r=_.extend({startField:null,endField:null,timelineJSOptions:{}},t.state);this.state=new recline.Model.ObjectState(r);this._setupTemporalField()},render:function(){var t={},n=Mustache.render(this.template,t);this.el.html(n);e(this.elementId).length>0&&this._initTimeline()},show:function(){this._timelineIsInitialized===!1&&this._initTimeline()},_initTimeline:function(){var e=this.el.find(this.elementId),t=Math.max(this.el.width(),this.el.find(".recline-timeline").width());t&&e.width(t);var n=this._timelineJSON();this.timeline.init(n,this.elementId,this.state.get("timelineJSOptions"));this._timelineIsInitialized=!0},reloadData:function(){if(this._timelineIsInitialized){var e=this._timelineJSON();this.timeline.reload(e)}},convertRecord:function(e,t){return this._convertRecord(e,t)},_convertRecord:function(e,t){var n=this._parseDate(e.get(this.state.get("startField"))),r=this._parseDate(e.get(this.state.get("endField")));if(n){var i={startDate:n,endDate:r,headline:String(e.get("title")||""),text:e.get("description")||e.summary()};return i}return null},_timelineJSON:function(){var e=this,t={timeline:{type:"default",headline:"",date:[]}};this.model.records.each(function(n){var r=e.convertRecord(n,e.fields);r&&t.timeline.date.push(r)});if(t.timeline.date.length===0){var n={startDate:"2000,1,1",headline:"No data to show!"};t.timeline.date.push(n)}return t},_parseDate:function(e){if(!e)return null;var t=e.trim();t=t.replace(/(\d)th/g,"$1");t=t.replace(/(\d)st/g,"$1");t=t.trim()?moment(t):null;return t.toDate()=="Invalid Date"?null:t.toDate()},_setupTemporalField:function(){this.state.set({startField:this._checkField(this.startFieldNames),endField:this._checkField(this.endFieldNames)})},_checkField:function(e){var t=this.model.fields.pluck("id");for(var n=0;n<e.length;n++)for(var r=0;r<t.length;r++)if(t[r].toLowerCase()==e[n].toLowerCase())return t[r];return null}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.Transform=Backbone.View.extend({template:'     <div class="recline-transform">       <div class="script">         <h2>           Transform Script           <button class="okButton btn btn-primary">Run on all records</button>         </h2>         <textarea class="expression-preview-code"></textarea>       </div>       <div class="expression-preview-parsing-status">         No syntax error.       </div>       <div class="preview">         <h3>Preview</h3>         <div class="expression-preview-container"></div>       </div>     </div>   ',events:{"click .okButton":"onSubmit","keydown .expression-preview-code":"onEditorKeydown"},initialize:function(t){this.el=e(this.el)},render:function(){var e=Mustache.render(this.template);this.el.html(e);var t=this.el.find(".expression-preview-code");if(this.model.fields.length>0)var n=this.model.fields.models[0].id;else var n="unknown";t.val("function(doc) {\n  doc['"+n+"'] = doc['"+n+"'];\n  return doc;\n}");t.keydown()},onSubmit:function(e){var t=this,n=this.el.find(".expression-preview-code").val(),r=recline.Data.Transform.evalFunction(n);if(r.errorMessage){this.trigger("recline:flash",{message:"Error with function! "+r.errorMessage});return}this.model.transform(r)},editPreviewTemplate:'       <table class="table table-condensed table-bordered before-after">       <thead>       <tr>         <th>Field</th>         <th>Before</th>         <th>After</th>       </tr>       </thead>       <tbody>       {{#row}}       <tr>         <td>           {{field}}         </td>         <td class="before {{#different}}different{{/different}}">           {{before}}         </td>         <td class="after {{#different}}different{{/different}}">           {{after}}         </td>       </tr>       {{/row}}       </tbody>       </table>   ',onEditorKeydown:function(e){var t=this;window.setTimeout(function(){var n=t.el.find(".expression-preview-parsing-status"),r=recline.Data.Transform.evalFunction(e.target.value);if(!r.errorMessage){n.text("No syntax error.");var i=t.model.records.map(function(e){return e.toJSON()}),s=recline.Data.Transform.previewTransform(i,r),o=t.el.find(".expression-preview-container"),u=t.model.fields.toJSON(),a=_.map(s.slice(0,4),function(e){return _.map(u,function(t){return{field:t.id,before:e.before[t.id],after:e.after[t.id],different:!_.isEqual(e.before[t.id],e.after[t.id])}})});o.html("");_.each(a,function(e){var n=Mustache.render(t.editPreviewTemplate,{row:e});o.append(n)})}else n.text(r.errorMessage)},1,!0)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.FacetViewer=Backbone.View.extend({className:"recline-facet-viewer",template:'     <div class="facets">       {{#facets}}       <div class="facet-summary" data-facet="{{id}}">         <h3>           {{id}}         </h3>         <ul class="facet-items">         {{#terms}}           <li><a class="facet-choice js-facet-filter" data-value="{{term}}" href="#{{term}}">{{term}} ({{count}})</a></li>         {{/terms}}         {{#entries}}           <li><a class="facet-choice js-facet-filter" data-value="{{time}}">{{term}} ({{count}})</a></li>         {{/entries}}         </ul>       </div>       {{/facets}}     </div>   ',events:{"click .js-facet-filter":"onFacetFilter"},initialize:function(t){_.bindAll(this,"render");this.el=e(this.el);this.model.facets.bind("all",this.render);this.model.fields.bind("all",this.render);this.render()},render:function(){var e={fields:this.model.fields.toJSON()};e.facets=_.map(this.model.facets.toJSON(),function(e){e._type==="date_histogram"&&(e.entries=_.map(e.entries,function(e){e.term=(new Date(e.time)).toDateString();return e}));return e});var t=Mustache.render(this.template,e);this.el.html(t);this.model.facets.length>0?this.el.show():this.el.hide()},onHide:function(e){e.preventDefault();this.el.hide()},onFacetFilter:function(t){t.preventDefault();var n=e(t.target),r=n.closest(".facet-summary").attr("data-facet"),i=n.attr("data-value");this.model.queryState.addFilter({type:"term",field:r,term:i});this.model.query()}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.Fields=Backbone.View.extend({className:"recline-fields-view",template:'     <div class="accordion fields-list well">     <h3>Fields <a href="#" class="js-show-hide">+</a></h3>     {{#fields}}       <div class="accordion-group field">         <div class="accordion-heading">           <i class="icon-file"></i>           <h4>             {{label}}             <small>               {{type}}               <a class="accordion-toggle" data-toggle="collapse" href="#collapse{{id}}"> &raquo; </a>             </small>           </h4>         </div>         <div id="collapse{{id}}" class="accordion-body collapse">           <div class="accordion-inner">             {{#facets}}             <div class="facet-summary" data-facet="{{id}}">               <ul class="facet-items">               {{#terms}}                 <li class="facet-item"><span class="term">{{term}}</span> <span class="count">[{{count}}]</span></li>               {{/terms}}               </ul>             </div>             {{/facets}}             <div class="clear"></div>           </div>         </div>       </div>     {{/fields}}     </div>   ',initialize:function(t){var n=this;this.el=e(this.el);_.bindAll(this,"render");this.model.fields.bind("reset",function(e){n.model.fields.each(function(e){e.facets.unbind("all",n.render);e.facets.bind("all",n.render)});n.model.getFieldsSummary();n.render()});this.el.find(".collapse").collapse();this.render()},render:function(){var e=this,t={fields:[]};this.model.fields.each(function(e){var n=e.toJSON();n.facets=e.facets.toJSON();t.fields.push(n)});var n=Mustache.render(this.template,t);this.el.html(n)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.FilterEditor=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <a href="#" class="js-add-filter">Add filter</a>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <label>Filter type</label>           <select class="filterType">             <option value="term">Value</option>             <option value="range">Range</option>             <option value="geo_distance">Geo distance</option>           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',range:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">From</label>           <input type="text" value="{{start}}" name="start" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">To</label>           <input type="text" value="{{stop}}" name="stop" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',geo_distance:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">Longitude</label>           <input type="text" value="{{point.lon}}" name="lon" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Latitude</label>           <input type="text" value="{{point.lat}}" name="lat" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Distance (km)</label>           <input type="text" value="{{distance}}" name="distance" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){this.el=e(this.el);_.bindAll(this,"render");this.model.fields.bind("all",this.render);this.model.queryState.bind("change",this.render);this.model.queryState.bind("change:filters:new-blank",this.render);this.render()},render:function(){var t=this,n=e.extend(!0,{},this.model.queryState.toJSON());n.filters=_.map(n.filters,function(e,t){e.id=t;return e});n.fields=this.model.fields.toJSON();n.filterRender=function(){return Mustache.render(t.filterTemplates[this.type],this)};var r=Mustache.render(this.template,n);this.el.html(r)},onAddFilterShow:function(t){t.preventDefault();var n=e(t.target);n.hide();this.el.find("form.js-add").show()},onAddFilter:function(t){t.preventDefault();var n=e(t.target);n.hide();var r=n.find("select.filterType").val(),i=n.find("select.fields").val();this.model.queryState.addFilter({type:r,field:i})},onRemoveFilter:function(t){t.preventDefault();var n=e(t.target),r=n.attr("data-filter-id");this.model.queryState.removeFilter(r)},onTermFiltersUpdate:function(t){var n=this;t.preventDefault();var r=n.model.queryState.get("filters"),i=e(t.target);_.each(i.find("input"),function(t){var n=e(t),i=n.attr("data-filter-type"),s=n.attr("data-filter-field"),o=parseInt(n.attr("data-filter-id"),10),u=n.attr("name"),a=n.val();switch(i){case"term":r[o].term=a;break;case"range":r[o][u]=a;break;case"geo_distance":u==="distance"?r[o].distance=parseFloat(a):r[o].point[u]=parseFloat(a)}});n.model.queryState.set({filters:r,from:0});n.model.queryState.trigger("change")}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.Pager=Backbone.View.extend({className:"recline-pager",template:'     <div class="pagination">       <ul>         <li class="prev action-pagination-update"><a href="">&laquo;</a></li>         <li class="active"><a><input name="from" type="text" value="{{from}}" /> &ndash; <input name="to" type="text" value="{{to}}" /> </a></li>         <li class="next action-pagination-update"><a href="">&raquo;</a></li>       </ul>     </div>   ',events:{"click .action-pagination-update":"onPaginationUpdate","change input":"onFormSubmit"},initialize:function(){_.bindAll(this,"render");this.el=e(this.el);this.model.bind("change",this.render);this.render()},onFormSubmit:function(e){e.preventDefault();var t=parseInt(this.el.find('input[name="from"]').val()),n=parseInt(this.el.find('input[name="to"]').val())-t;t=Math.max(t,0);n=Math.max(n,1);this.model.set({size:n,from:t})},onPaginationUpdate:function(t){t.preventDefault();var n=e(t.target),r=0;n.parent().hasClass("prev")?r=this.model.get("from")-Math.max(0,this.model.get("size")):r=this.model.get("from")+this.model.get("size");r=Math.max(r,0);this.model.set({from:r})},render:function(){var e=this.model.toJSON();e.to=this.model.get("from")+this.model.get("size");var t=Mustache.render(this.template,e);this.el.html(t)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.QueryEditor=Backbone.View.extend({className:"recline-query-editor",template:'     <form action="" method="GET" class="form-inline">       <div class="input-prepend text-query">         <span class="add-on"><i class="icon-search"></i></span>         <input type="text" name="q" value="{{q}}" class="span2" placeholder="Search data ..." class="search-query" />       </div>       <button type="submit" class="btn">Go &raquo;</button>     </form>   ',events:{"submit form":"onFormSubmit"},initialize:function(){_.bindAll(this,"render");this.el=e(this.el);this.model.bind("change",this.render);this.render()},onFormSubmit:function(e){e.preventDefault();var t=this.el.find(".text-query input").val();this.model.set({q:t})},render:function(){var e=this.model.toJSON(),t=Mustache.render(this.template,e);this.el.html(t)}})})(jQuery,recline.View);this.recline=this.recline||{};this.recline.View=this.recline.View||{};(function(e,t){t.ValueFilter=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <button class="btn js-add-filter add-filter">Add filter</button>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn update-filter">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           {{field}}           <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){this.el=e(this.el);_.bindAll(this,"render");this.model.fields.bind("all",this.render);this.model.queryState.bind("change",this.render);this.model.queryState.bind("change:filters:new-blank",this.render);this.render()},render:function(){var t=this,n=e.extend(!0,{},this.model.queryState.toJSON());n.filters=_.map(n.filters,function(e,t){e.id=t;return e});n.fields=this.model.fields.toJSON();n.filterRender=function(){return Mustache.render(t.filterTemplates.term,this)};var r=Mustache.render(this.template,n);this.el.html(r)},updateFilter:function(t){var n=this,r=n.model.queryState.get("filters"),i=e(t),s=parseInt(i.attr("data-filter-id"),10),o=i.val();r[s].term=o},onAddFilterShow:function(t){t.preventDefault();var n=e(t.target);n.hide();this.el.find("form.js-add").show()},onAddFilter:function(t){t.preventDefault();var n=e(t.target);n.hide();var r=n.find("select.fields").val();this.model.queryState.addFilter({type:"term",field:r})},onRemoveFilter:function(t){t.preventDefault();var n=e(t.target),r=n.attr("data-filter-id");this.model.queryState.removeFilter(r)},onTermFiltersUpdate:function(t){var n=this;t.preventDefault();var r=n.model.queryState.get("filters"),i=e(t.target);_.each(i.find("input"),function(e){n.updateFilter(e)});n.model.queryState.set({filters:r,from:0});n.model.queryState.trigger("change")}})})(jQuery,recline.View);(function(e,t){t.FlotHisto=Backbone.View.extend({template:' 			<div class="recline-flot"> 			<div class="panel graph" style="display: block;"> 			<div class="js-temp-notice alert alert-block"> 			<h3 class="alert-heading">Hey there!</h3> 			<p>There\'s no Flot histogram graph here yet because we don\'t know what fields you\'d like to see plotted.</p> 			<p>Please tell us by <strong>using the menu on the right</strong> and a graph will automatically appear.</p> 			</div> 			</div> 			</div> 			',initialize:function(n){var r=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"];this.el=e(this.el);_.bindAll(this,"render","redraw","_toolTip","_xaxisLabel");this.needToRedraw=!1;this.model.bind("change",this.render);this.model.fields.bind("reset",this.render);this.model.fields.bind("add",this.render);this.model.records.bind("add",this.redraw);this.model.records.bind("reset",this.redraw);var i=_.extend({group:null,series:[],graphType:"lines-and-points"},n.state);this.state=new recline.Model.ObjectState(i);this.previousTooltipPoint={x:null,y:null};this.editor=new t.FlotHistoControls({model:this.model,state:this.state.toJSON()});this.editor.state.bind("change",function(){r.state.set(r.editor.state.toJSON());r.redraw()});this.elSidebar=this.editor.el},render:function(){var t=this,n=this.model.toTemplateJSON(),r=Mustache.render(this.template,n);e(this.el).html(r);this.$graph=this.el.find(".panel.graph");this.$graph.on("plothover",this._toolTip);return this},redraw:function(){var t=!jQuery.expr.filters.hidden(this.el[0]);if(!t||this.model.records.length===0){this.needToRedraw=!0;return}if(this.state.get("group")&&this.state.get("series")){var n=this.createSeries(),r=this.getGraphOptions(this.state.attributes.graphType,n[0].data.length);console.log(n[0].bins[0],n[0].bins[1],n[0].bins[2],n[0].bins[3]);console.log(this.$graph);console.log(r);this.plot=e.plot(this.$graph,[n[0].bins],{series:{bars:{show:!0,barWidth:.6,align:"center"}},xaxis:{mode:"categories",tickLength:0}})}},show:function(){this.needToRedraw&&this.redraw()},_toolTip:function(t,n,r){if(r){if(this.previousTooltipPoint.x!==r.dataIndex||this.previousTooltipPoint.y!==r.seriesIndex){this.previousTooltipPoint.x=r.dataIndex;this.previousTooltipPoint.y=r.seriesIndex;e("#recline-flot-tooltip").remove();var i=r.datapoint[0].toFixed(2),s=r.datapoint[1].toFixed(2);this.state.attributes.graphType==="bars"&&(i=r.datapoint[1].toFixed(2),s=r.datapoint[0].toFixed(2));var o=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:this.state.attributes.group,x:this._xaxisLabel(i),series:r.series.label,y:s}),u,a;if(this.state.attributes.graphType==="bars"){u=r.pageX+15;a=r.pageY-10}else if(this.state.attributes.graphType==="columns"){u=r.pageX+15;a=r.pageY}else{u=r.pageX+10;a=r.pageY-20}e('<div id="recline-flot-tooltip">'+o+"</div>").css({top:a,left:u}).appendTo("body").fadeIn(200)}}else{e("#recline-flot-tooltip").remove();this.previousTooltipPoint.x=null;this.previousTooltipPoint.y=null}},_xaxisLabel:function(e){var t=this.model.fields.get(this.state.attributes.group),n=t.get("type"),r=n==="date"||n==="date-time"||n==="time";if(this.xvaluesAreIndex){e=parseInt(e,10);e=this.model.records.models[e].get(this.state.attributes.group)}r&&(e=(new Date(e)).toLocaleDateString());return e},getGraphOptions:function(e,t){var n=this,r=function(e){var t=n._xaxisLabel(e)||"";typeof t!="string"&&(t=t.toString());n.state.attributes.graphType!=="bars"&&t.length>10&&(t=t.slice(0,10)+"...");return t},s={};s.tickFormatter=r;if(this.xvaluesAreIndex){var o=Math.min(this.model.records.length,15),u=this.model.records.length/o,a=[];for(i=0;i<o;i++)a.push(parseInt(i*u,10));s.ticks=a}var f={};f.autoscale=!0;f.autoscaleMargin=.02;var l={};l.position="ne";var c={};c.hoverable=!0;c.clickable=!0;c.borderColor="#aaaaaa";c.borderWidth=1;var h={lines:{legend:l,colors:this.graphColors,lines:{show:!0},xaxis:s,yaxis:f,grid:c},points:{legend:l,colors:this.graphColors,points:{show:!0,hitRadius:5},xaxis:s,yaxis:f,grid:c},"lines-and-points":{legend:l,colors:this.graphColors,points:{show:!0,hitRadius:5},lines:{show:!0},xaxis:s,yaxis:f,grid:c},bars:{legend:l,colors:this.graphColors,lines:{show:!1},xaxis:f,yaxis:s,grid:c,bars:{show:!0,horizontal:!0,shadowSize:0,align:"center",barWidth:.8}},columns:{legend:l,colors:this.graphColors,lines:{show:!1},xaxis:s,yaxis:f,grid:c,bars:{show:!0,horizontal:!1,shadowSize:0,align:"center",barWidth:.8}}};return n.state.get("graphOptions")?_.extend(h[e],n.state.get("graphOptions")):h[e]},createSeries:function(){var e=this;e.xvaluesAreIndex=!1;var t=[];_.each(this.state.attributes.series,function(n){var r=[];console.log("Field: "+n);var i=e.model.fields.get(n).get("label");_.each(e.model.records.models,function(t,i){var s=e.model.fields.get(e.state.attributes.group),o=t.getFieldValue(s),u=s.get("type"),a=u==="date"||u==="date-time"||u==="time";if(a){e.xvaluesAreIndex=!0;o=i}else if(typeof o=="string"){o=parseFloat(o);if(isNaN(o)){o=i;e.xvaluesAreIndex=!0}}var f=e.model.fields.get(n),l=t.getFieldValue(f);e.state.attributes.graphType=="bars"?r.push([l,o]):r.push([o,l])});t.push({data:r,label:i,hoverable:!0})});this.calculateHistogram(t);return t},calculateHistogram:function(t){_.each(t,function(t){console.log("Label:"+t.label);console.log("data.length: "+t.data.length);console.log(t);var n=e.parseJSON(t.style),r=e.parseJSON(t.config),s=t.data,o=s[0][0],u=s[0][0];for(i=0;i<s.length;i+=1){o=Math.min(o,s[i][0]);u=Math.max(u,s[i][0]);console.log("data["+i+"][0]: "+s[i][0]+"	data["+i+"][1]: "+s[i][1]+"	lower: "+o+"	upper"+u)}var a=e("#i_numBins").val(),f=e("#i_precision").val(),l=new Array,c=(u-o+1)/a,h=0;console.log("precision: "+f);console.log("upper: "+u+"	lower: "+o);for(i=0;i<a-1;i++)l[i]=["["+(i*c).toPrecision(f)+"-"+((i+1)*c).toPrecision(f)+"[",0];i=a-1;l[i]=["["+(i*c).toPrecision(3)+"-"+((i+1)*c).toPrecision(3)+"]",0];for(i=0;i<s.length;i++){pos=Math.floor(s[i][0]/c);pos==a&&(pos=a-1);if(pos<=a){bin=l[pos];bin[1]++}else h++}t.bins=l})}});t.FlotHistoControls=Backbone.View.extend({className:"editor",template:' 			<div class="editor"> 			<form class="form-stacked"> 			<div class="clearfix"> 			<label>Graph Type</label> 			<div class="input editor-type"> 			<select> 			<option value="lines-and-points">Lines and Points</option> 			<option value="lines">Lines</option> 			<option value="points">Points</option> 			<option value="bars">Bars</option> 			<option value="columns">Columns</option> 			</select> 			</div> 			<label>Field Selector</label> 			<div class="input editor-group"> 			<select> 			<option value="">Please choose ...</option> 			{{#fields}} 			<option value="{{id}}">{{label}}</option> 			{{/fields}} 			</select> 			<label>Type:</label>			<select id="s_type" name="select_type">			<option>linear</option>			<option>logarithmic</option>			</select>			</div> 			<div class="editor-series-group"> 			</div> 			</div> 			<div class="editor-buttons"> 			<button class="btn editor-add"  comment="hidden temporarily" style="display: none;">Add Series</button> 			</div> 			<div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;"> 			<button class="editor-save">Save</button> 			<input type="hidden" class="editor-id" value="chart-1" /> 			</div> 			</form> 			</div> 			',templateSeriesEditor:' 				<div class="editor-series js-series-{{seriesIndex}}"> 				<div class="input"> 				<select style="visibility:hidden"> 				{{#fields}} 				<option value="{{id}}">{{label}}</option> 				{{/fields}} 				</select> 				<label>Precision:</label>				<input id="i_precision"    type="number" maxlength="2" size="2" value="3"/>				<label>Number of Bins:</label>				<input id="i_numBins" type="number" maxlength="2" size="2" value="4"/>				<div id="bin_slider"></div>				</div> 				</div> 			',events:{"change form select":"onEditorSubmit","change input":"onEditorInputSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(t){var n=this;this.el=e(this.el);_.bindAll(this,"render");this.model.fields.bind("reset",this.render);this.model.fields.bind("add",this.render);this.state=new recline.Model.ObjectState(t.state);this.render()},render:function(){var t=this,n=this.model.toTemplateJSON(),r=Mustache.render(this.template,n);this.el.html(r);this.state.get("graphType")&&this._selectOption(".editor-type",this.state.get("graphType"));this.state.get("group")&&this._selectOption(".editor-group",this.state.get("group"));var i=[""];this.state.get("series").length>0&&(i=this.state.get("series"));_.each(i,function(e,n){t.addSeries(n);t._selectOption(".editor-series.js-series-"+n,e)});console.log("Print Range Slider");e("#range_slider").slider({range:!0,min:0,max:10,values:[0,10],slide:function(t,n){e("#i_lower").val(n.values[0]);e("#i_upper").val(n.values[1])}});e("#i_lower").val(e("#range_slider").slider("values",0));e("#i_upper").val(e("#range_slider").slider("values",1));return this},_selectOption:function(t,n){var r=this.el.find(t+" select > option");r&&r.each(function(t){if(this.value==n){e(this).attr("selected","selected");return!1}})},onEditorSubmit:function(t){var n=this.el.find(".editor-group select"),r=this,i=this.el.find(".editor-series select"),s=i.map(function(){return e(this).val()}),o={series:e.makeArray(s),group:this.el.find(".editor-group select").val(),graphType:this.el.find(".editor-type select").val(),numBins:e("#i_numBins").val(),precision:e("#i_precision").val()};this.state.set(o)},onEditorInputSubmit:function(e){console.log("onEditorInputSubmit()");this.onEditorSubmit(e)},addSeries:function(e){var t=_.extend({seriesIndex:e,seriesName:String.fromCharCode(e+64+1)},this.model.toTemplateJSON()),n=Mustache.render(this.templateSeriesEditor,t);this.el.find(".editor-series-group").append(n);return this},_onAddSeries:function(e){e.preventDefault();this.addSeries(this.state.get("series").length)},removeSeries:function(t){t.preventDefault();var n=e(t.target);n.parent().parent().remove();this.onEditorSubmit()}})})(jQuery,recline.View);this.recline.View.GraphHisto=this.recline.View.FlotHisto;this.recline=this.recline||{};this.recline.View=this.recline.View||{};this.recline=this.recline||{};this.recline.View=this.recline.View||{};
